name: Day0 | Create ise01 VM

on:
  workflow_dispatch:

env:
  VM_NAME: ise01
  VM_FOLDER: NET
  VM_IP_ADDRESS: ${{ vars.VM_ISE01_IP }}
  CONTENT_LIBRARY_NAME: NET
  CONTENT_LIBRARY_ITEM_NAME: Cisco-vISE-300-3.4.0.608
  NTP_TIMEZONE: Europe/Prague
  NTP_SERVER_1: tik.cesnet.cz
  NTP_SERVER_2: tak.cesnet.cz

jobs:
  setup-prerequisites:
    runs-on: [self-hosted, linux, initial, rexonix-infra]
    steps:
    - uses: Anush008/clean-after-action@v4.2.0

    - name: Install govc
      run: |
        if ! command -v govc &> /dev/null
        then
            curl -L -o - "https://github.com/vmware/govmomi/releases/latest/download/govc_$(uname -s)_$(uname -m).tar.gz" \
                 | sudo tar -C /usr/local/bin -xvzf - govc
        fi
        govc version

    - name: Test vCenter Connectivity
      env:
        GOVC_INSECURE: ${{ secrets.VCENTER_INSECURE_CONNECTION }}
        GOVC_URL: ${{ secrets.VCENTER_HOST }}
        GOVC_USERNAME: ${{ secrets.VCENTER_USER }}
        GOVC_PASSWORD: ${{ secrets.VCENTER_PASS }}
      run: |
        govc about

  create-ise01-vm:
    needs: setup-prerequisites
    runs-on: [self-hosted, linux, initial, rexonix-infra]
    env:
      GOVC_INSECURE: ${{ secrets.VCENTER_INSECURE_CONNECTION }}
      GOVC_URL: ${{ secrets.VCENTER_HOST }}
      GOVC_USERNAME: ${{ secrets.VCENTER_USER }}
      GOVC_PASSWORD: ${{ secrets.VCENTER_PASS }}
    steps:
    - uses: Anush008/clean-after-action@v4.2.0

    - name: Create VM from OVA Template
      id: create-vm
      run: |
        if [[ ! -n "$(govc vm.info ${{ env.VM_NAME }})" ]]
        then
            govc library.deploy -folder="${{ env.VM_FOLDER }}" \
                                -ds="${{ vars.VCENTER_DATASTORE_NAME }}" \
                                /${{ env.CONTENT_LIBRARY_NAME }}/${{ env.CONTENT_LIBRARY_ITEM_NAME }} \
                                ${{ env.VM_NAME }}
            #
            base64 <<EOF > vmdata.config
            hostname=${{ env.VM_NAME }}
            ipv4_addr=${{ env.VM_IP_ADDRESS }}
            ipv4_mask=${{ vars.VCENTER_DEFAULT_PORT_GROUP_NETMASK }}
            ipv4_default_gw=${{ vars.VCENTER_DEFAULT_PORT_GROUP_GATEWAY }}
            # ipv6_addr=
            # ipv6_default_gw=
            primarynameserver=${{ vars.DNS_SERVER_IPV4_LAB_VIP }}
            # secondarynameserver=
            # tertiarynameserver=
            dnsdomain=${{ vars.VM_DOMAIN_NAME_LAB }}
            primaryntpserver=${{ env.NTP_SERVER_1 }}
            secondaryntpserver=${{ env.NTP_SERVER_2 }}
            # tertiaryntpserver=
            timezone=${{ env.NTP_TIMEZONE }}
            ssh=true
            username=${{ secrets.CISCO_ISE_ADMIN_USERNAME }}
            password=${{ secrets.CISCO_ISE_ADMIN_PASSWORD }}
            ersapi=yes
            pxGrid=yes
            pxgrid_cloud=no
            EOF
            govc vm.change -vm ${{ env.VM_NAME }} -f guestinfo.ise.ztp="./vmdata.config"
            #
            govc vm.network.change -vm ${{ env.VM_NAME }} -net ${{ vars.VCENTER_DEFAULT_PORT_GROUP }} *
            #
            govc vm.power -on ${{ env.VM_NAME }}
            sleep 30
            govc vm.info -json ${{ env.VM_NAME }}
            echo "VM_CREATED=true" >> $GITHUB_ENV
        else
            echo "VM_CREATED=false" >> $GITHUB_ENV
        fi
